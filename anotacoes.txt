yarn init -y (parametro y da um skip nas perguntas padrao)
O projeto eh criado com um arquivo cahamdo package.json e esse sera nosso arquivo de configuracao, onde iremos configurar as nossas dependencias

yarn add express (para adicionar a lib express)
Ao intalar vai ser criado o arquivo yarn.lock que ira conter infos e tbm o cache das nossas dependecias assim que vamos instalando, e tambem eh criado a pasta node modules que de fato contem nossas dependencias e as dependencias das dependencias que instalamos.
Apos isso podemos iniciar o servidor executando o node server.js

yarn add nodemon -D (parametro -D pois utilizaremos o nodemon somente como uma dependencia de desenvolvimento)
O nodemon serve para ficar atualizando o servidor automaticamente com o comando de valor "nodemon src/server.js" inserido no script do package.json com a chave "dev": Depois rodar o yarn dev

Estudar sobre o uso do GET, POST, PUT, DELETE usando o express e o insomnia - criar o codigo para rodar esses metodos
Criar o arquivo "routes.js" para inserirmos as rotas dentro dele  

Criar o banco de dados no mongoDB Atlas

Instalar a dependencia mongoose
O mongoose eh uma lib que nos ajuda trabalhar com os dados no mongoDB, para criar, editar, deletar um registro na nossa tabela de dados vamos utilizar o mongoose. importar o mongoose no codigo e criar o mongoose.connect(url)

Utilizando o pattern MVC, criar as pastas models e controllers e posteriormente a pasta Views
Models - representa uma entidade na nossa aplicacao, um schema ou tabela no banco de dados
Controllers - eh onde colocamos a regra de negocio da nossa aplicacao, ira receber a requisicao e devolver uma resposta da nossa rota




